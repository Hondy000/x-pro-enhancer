name: PR Check

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Check code formatting
      run: npm run lint
    
    - name: Run tests
      run: npm test
    
    - name: Check build
      run: npm run build
    
    - name: Comment PR
      uses: actions/github-script@v7
      if: always()
      with:
        script: |
          const { data: comments } = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
          });
          
          const botComment = comments.find(comment => {
            return comment.user.type === 'Bot' && comment.body.includes('## CI/CD チェック結果');
          });
          
          const body = `## CI/CD チェック結果
          
          | チェック項目 | 結果 |
          |------------|------|
          | 🧪 テスト | ${{ job.status == 'success' && '✅ パス' || '❌ 失敗' }} |
          | 🎨 リント | ${{ job.status == 'success' && '✅ パス' || '❌ 失敗' }} |
          | 📦 ビルド | ${{ job.status == 'success' && '✅ 成功' || '❌ 失敗' }} |
          
          コミット: ${{ github.sha }}
          `;
          
          if (botComment) {
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: botComment.id,
              body
            });
          } else {
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
          }